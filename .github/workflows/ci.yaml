name: Python CI

on:
  push:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.7'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: run pipeline
      env:
        DAGSHUB_PAT: ${{ secrets.DAGSHUB_PAT }}
      run: |
        echo "Secret fetched successfully"
        dvc repro

    - name: Dagshub Setup and dvc Push
      env:
        DVC_REMOTE_URL: https://dagshub.com/MitVinay/youtube_chrome.s3
        access_key_id: ${{ secrets.access_key_id }}
        secret_access_key: ${{ secrets.secret_access_key }}
      run: |
        dvc remote modify origin --local access_key_id $access_key_id
        dvc remote modify origin --local secret_access_key $secret_access_key
        dvc push -r origin


    - name: Git Commit and Push (Bot User)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub provided token for commits
      run: |
        # Set git configuration to use bot identity for commit
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Commit changes to DVC files and push to the repository
        git add .
        git commit -m "Automated DVC push and updates"
        git push origin main

    - name: Run load_model test
      run: |
        echo "Running load_model test..."
        pytest testing_scripts/load_model.py 

    - name: Run model signature test
      run: |
        echo "Running load_model test.s.."
        pytest testing_scripts/signature_model.py 